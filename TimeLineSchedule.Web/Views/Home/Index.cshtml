@using TimeLineSchedule.Core.Helper
@using TimeLineSchedule.DataLayer.Entities
@model List<ClassData>
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>زمان بندی</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body class="HomePageBG">
    <script src="~/js/site.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
  
    <div class="text-center HomeContainer">

            @foreach (var classItem in Model)
            {
            <div class="row border border-dark HomePageBoard HomeBox"  style="background-color: @(GetClassBoxColor(classItem))">
                <div class="col-2 ">@classItem.ClassName</div>
                <div class="col-2 ">@classItem.Group</div>
                <div class="col-2 ">@classItem.TeacherName</div>
                <div class="col-2">@classItem.ClassNum</div>
                <div class="col-2">                   
                    @if (classItem.DayOfClass != null)
                    {
                        <text>@ValueConverter.ConvertToPersianDayOfWeek(classItem.DayOfClass.Value)</text>
                    }
                    else
                    {
                        <text>روز نامشخص</text>
                    }
                </div>
                <div class="col-2"><i>@classItem.ClassStart</i>-<i>@classItem.ClassEnd</i></div>
            </div>    
            }
    </div>
      
  </body>
  </html>

@functions {
    string GetClassBoxColor(ClassData classItem)
    {
        if (classItem.ClassStatus == false)
        {
            return "#FF546B"; 
        }
        else
        {
            
            var currentTime = DateTime.Now.TimeOfDay;
            var classStartTime = classItem.ClassStart?.ToTimeSpan();
            var classEndTime = classItem.ClassEnd?.ToTimeSpan();

            if (classStartTime != null && classEndTime != null &&
                currentTime >= classStartTime && currentTime <= classEndTime)
            {
                return "#77FF58"; 
            }
            else
            {
                return "#FFFCAA"; 
            }
        }
    }
}

